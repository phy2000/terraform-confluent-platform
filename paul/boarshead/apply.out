module.paul_cp.data.template_file.cluster_name_prefix: Refreshing state...
module.paul_cp.data.template_file.cluster_dns_postfix: Refreshing state...
module.paul_cp.data.aws_vpc.bootcamp: Refreshing state...
module.paul_cp.data.aws_route53_zone.public: Refreshing state...
module.paul_cp.data.aws_route53_zone.private: Refreshing state...
module.paul_cp.data.aws_subnet.subnet_c: Refreshing state...
module.paul_cp.data.aws_subnet.subnet_b: Refreshing state...
module.paul_cp.data.aws_subnet.subnet_a: Refreshing state...
module.paul_cp.data.aws_security_groups.bootcamp: Refreshing state...

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.paul_cp.aws_instance.app[0] will be created
  + resource "aws_instance" "app" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-app1"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.app[1] will be created
  + resource "aws_instance" "app" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-app2"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.broker[0] will be created
  + resource "aws_instance" "broker" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.medium"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-kfk1"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 30
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.broker[1] will be created
  + resource "aws_instance" "broker" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.medium"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-kfk2"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 30
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.broker[2] will be created
  + resource "aws_instance" "broker" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.medium"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-kfk3"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 30
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.c3[0] will be created
  + resource "aws_instance" "c3" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.medium"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-c31"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.ksql[0] will be created
  + resource "aws_instance" "ksql" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-ksql1"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.ksql[1] will be created
  + resource "aws_instance" "ksql" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-ksql2"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.zookeeper[0] will be created
  + resource "aws_instance" "zookeeper" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-zk1"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.zookeeper[1] will be created
  + resource "aws_instance" "zookeeper" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-zk2"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_instance.zookeeper[2] will be created
  + resource "aws_instance" "zookeeper" {
      + ami                          = "ami-06d51e91cea0dac8d"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t3.small"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "west2-pyoung"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = "subnet-0b7590362ae2e19da"
      + tags                         = {
          + "Name"  = "paul-bh-zk3"
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = {
          + "Owner" = "paul"
          + "SA"    = "paul"
          + "owner" = "paul"
          + "sa"    = "paul"
        }
      + vpc_security_group_ids       = [
          + "sg-0391972943fdd1bb5",
          + "sg-086857c30f12a4858",
          + "sg-08adc5f0c1bec3669",
        ]

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = true
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 15
          + volume_type           = (known after apply)
        }
    }

  # module.paul_cp.aws_route53_record.app[0] will be created
  + resource "aws_route53_record" "app" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "app1.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.app[1] will be created
  + resource "aws_route53_record" "app" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "app2.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.broker[0] will be created
  + resource "aws_route53_record" "broker" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "kfk1.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.broker[1] will be created
  + resource "aws_route53_record" "broker" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "kfk2.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.broker[2] will be created
  + resource "aws_route53_record" "broker" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "kfk3.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.c3[0] will be created
  + resource "aws_route53_record" "c3" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "ccc1.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.ksql[0] will be created
  + resource "aws_route53_record" "ksql" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "ksql1.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.ksql[1] will be created
  + resource "aws_route53_record" "ksql" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "ksql2.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.zookeeper[0] will be created
  + resource "aws_route53_record" "zookeeper" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "zk1.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.zookeeper[1] will be created
  + resource "aws_route53_record" "zookeeper" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "zk2.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

  # module.paul_cp.aws_route53_record.zookeeper[2] will be created
  + resource "aws_route53_record" "zookeeper" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "zk3.bh.paul"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = "Z3DYW71V76XUGV"
    }

Plan: 22 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: 
module.paul_cp.aws_instance.c3[0]: Creating...
module.paul_cp.aws_instance.ksql[1]: Creating...
module.paul_cp.aws_instance.ksql[0]: Creating...
module.paul_cp.aws_instance.app[0]: Creating...
module.paul_cp.aws_instance.zookeeper[0]: Creating...
module.paul_cp.aws_instance.broker[2]: Creating...
module.paul_cp.aws_instance.app[1]: Creating...
module.paul_cp.aws_instance.broker[0]: Creating...
module.paul_cp.aws_instance.broker[1]: Creating...
module.paul_cp.aws_instance.zookeeper[1]: Creating...
module.paul_cp.aws_instance.app[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.ksql[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.zookeeper[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.broker[2]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.zookeeper[1]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.ksql[1]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.broker[1]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.broker[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.app[1]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.c3[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.zookeeper[1]: Creation complete after 16s [id=i-06dbda4a7c54aef22]
module.paul_cp.aws_instance.ksql[0]: Creation complete after 16s [id=i-0033f9b273a9b4b3b]
module.paul_cp.aws_instance.broker[1]: Creation complete after 16s [id=i-0ecee02464266656d]
module.paul_cp.aws_instance.zookeeper[2]: Creating...
module.paul_cp.aws_instance.app[0]: Creation complete after 16s [id=i-0ec94df9b4057f80b]
module.paul_cp.aws_instance.c3[0]: Creation complete after 17s [id=i-002502b26ca0b699a]
module.paul_cp.aws_instance.app[1]: Creation complete after 17s [id=i-0612c8a3692d95ac6]
module.paul_cp.aws_route53_record.c3[0]: Creating...
module.paul_cp.aws_route53_record.app[1]: Creating...
module.paul_cp.aws_route53_record.app[0]: Creating...
module.paul_cp.aws_instance.zookeeper[0]: Creation complete after 17s [id=i-05d42e9f778fea58e]
module.paul_cp.aws_instance.ksql[1]: Creation complete after 17s [id=i-03ca9d11bc8f1bd6a]
module.paul_cp.aws_route53_record.ksql[1]: Creating...
module.paul_cp.aws_route53_record.ksql[0]: Creating...
module.paul_cp.aws_instance.broker[0]: Creation complete after 20s [id=i-0bb91ffe4249f8ea6]
module.paul_cp.aws_instance.broker[2]: Creation complete after 20s [id=i-053112921beddcd38]
module.paul_cp.aws_route53_record.broker[1]: Creating...
module.paul_cp.aws_route53_record.broker[0]: Creating...
module.paul_cp.aws_route53_record.broker[2]: Creating...
module.paul_cp.aws_instance.zookeeper[2]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.c3[0]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.app[0]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.app[1]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.ksql[1]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.ksql[0]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.broker[1]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.broker[2]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.broker[0]: Still creating... [10s elapsed]
module.paul_cp.aws_instance.zookeeper[2]: Creation complete after 16s [id=i-0fcdfa968e3420a8d]
module.paul_cp.aws_route53_record.zookeeper[2]: Creating...
module.paul_cp.aws_route53_record.zookeeper[0]: Creating...
module.paul_cp.aws_route53_record.c3[0]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.app[0]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.app[1]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.ksql[1]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.ksql[0]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.broker[2]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.broker[1]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.broker[0]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.zookeeper[0]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.zookeeper[2]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.c3[0]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.app[0]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.app[1]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.ksql[1]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.ksql[0]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.broker[1]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.broker[0]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.broker[2]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.broker[0]: Creation complete after 32s [id=Z3DYW71V76XUGV_kfk1.bh.paul_CNAME]
module.paul_cp.aws_route53_record.zookeeper[1]: Creating...
module.paul_cp.aws_route53_record.broker[2]: Creation complete after 32s [id=Z3DYW71V76XUGV_kfk3.bh.paul_CNAME]
module.paul_cp.aws_route53_record.zookeeper[2]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.zookeeper[0]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.broker[1]: Creation complete after 33s [id=Z3DYW71V76XUGV_kfk2.bh.paul_CNAME]
module.paul_cp.aws_route53_record.app[1]: Creation complete after 37s [id=Z3DYW71V76XUGV_app2.bh.paul_CNAME]
module.paul_cp.aws_route53_record.c3[0]: Creation complete after 37s [id=Z3DYW71V76XUGV_ccc1.bh.paul_CNAME]
module.paul_cp.aws_route53_record.ksql[1]: Creation complete after 37s [id=Z3DYW71V76XUGV_ksql2.bh.paul_CNAME]
module.paul_cp.aws_route53_record.ksql[0]: Creation complete after 38s [id=Z3DYW71V76XUGV_ksql1.bh.paul_CNAME]
module.paul_cp.aws_route53_record.app[0]: Creation complete after 39s [id=Z3DYW71V76XUGV_app1.bh.paul_CNAME]
module.paul_cp.aws_route53_record.zookeeper[1]: Still creating... [10s elapsed]
module.paul_cp.aws_route53_record.zookeeper[2]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.zookeeper[0]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.zookeeper[2]: Creation complete after 33s [id=Z3DYW71V76XUGV_zk3.bh.paul_CNAME]
module.paul_cp.aws_route53_record.zookeeper[0]: Creation complete after 37s [id=Z3DYW71V76XUGV_zk1.bh.paul_CNAME]
module.paul_cp.aws_route53_record.zookeeper[1]: Still creating... [20s elapsed]
module.paul_cp.aws_route53_record.zookeeper[1]: Still creating... [30s elapsed]
module.paul_cp.aws_route53_record.zookeeper[1]: Creation complete after 37s [id=Z3DYW71V76XUGV_zk2.bh.paul_CNAME]

Apply complete! Resources: 22 added, 0 changed, 0 destroyed.
